<?php

// mysqli函数的预处理

// 后端程序要不要信任前端传递的参数
// 
// 预处理是项目中最常用的对于前端传递参数的一种处理方式
// 
// 并非所有的数据都需要预处理
// PHP程序自身产生的数据，不需要预处理
// 
// 前端传递参数，也并非都需要预处理

// 目前阶段，主要掌握预处理的语法以及执行步骤
// 

// 预处理的步骤
// 
// 
// 1，链接数据库
// 
$host = "127.0.0.1";
$user = "root";
$password = "";
$database = "psd1803";
$port = 3306;

$link = mysqli_connect($host , $user , $password , $database , $port);


// 2，指定SQL语句


// 查询use2表中，所有id > 3 的数据
// 
// 

// 假设变量 $a 存储的是前端传递过来的参数

$a = 3;
$b = 8000;


// 如果需要执行模糊查询，最好?的绑定数据，为查询的全部内容，不要写成 %?% 的形式，数据绑定时有可能和%产生冲突，程序无法正常执行


$c = "%e%";

// 1, 预处理时，首先要将SQL语句中，前端传递的参数，使用？替代

$query = "select * from use2 where der like ? and pay > ?";


// 2，开启预处理过程
// 
// 使用专门的预处理函数，预处理SQL语句
// 
// 并没有真正在数据库中执行SQL语句
// 
$stmt = mysqli_prepare($link , $query);



// 3，对SQL语句中的？进行数据绑定
// 
// 实现数据绑定的函数mysqli_bind_param()
// 
// 参数1，$stmt，执行预处理SQL语句函数的返回值
// 
// 
// 参数2，绑定数据的数据类型
// s    字符串
// i    整数型
// d    浮点型
// b    二进制大文本
// 
// 
// 参数3，是需要绑定的变量
// 
// 
// 该函数不需要获取返回值
// 
// 第二个参数，写的是所有需要绑定的数据的数据类型，按照？绑定数据的顺序，进行书写

// 之后，写的是所有绑定的变量，同样要按照？的顺序书写

// 一定要注意数据绑定的顺序要按照？的顺序来

mysqli_stmt_bind_param($stmt , "si" , $c , $b);


// 4，在数据库中执行绑定数据之后的预处理语句，并且接收执行结果
// 
// mysqli_stmt_execute()函数的执行结果是个布尔值
// 


// 第一次在MySQL数据库中执行我们绑定数据之后的SQL语句，是必不可少的一步

$bool = mysqli_stmt_execute($stmt);


// 如果是查询语句，需要再进行之后的处理
// 
// 专门将查询语句的预处理执行结果，转化为对象
// 
// 

$result = mysqli_stmt_get_result($stmt);


// 再使用mysqli_fetch_all()等函数转化为数组
// 
// 

$return = mysqli_fetch_all($result);


echo "<pre>";
print_r($return);
echo "</pre>";



// 关键步骤
// 1，使用？替换前端传递的参数
	// 模糊查询中 %e% ，全部替换
	// 

// 2，数据绑定
	// 数据类型，以及绑定的变量，需要跟？的顺序一直

// 3，理解，记忆数据绑定操作步骤

