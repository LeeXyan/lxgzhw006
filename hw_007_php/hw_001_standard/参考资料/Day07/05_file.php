<?php 
// 单文件上传PHP程序中，预定义变量$_FILES，接收到的是一个一维关联，二维关联的数组

// 原始文件名称
// [name] => qq.png

// 原始文件类型
// [type] => image/png

// 临时文件路径
// [tmp_name] => C:\Windows\Temp\phpF662.tmp

// 上传文件结果报错
// [error] => 0

// 文件大小
// [size] => 123583

// 临时文件路径
// HTML文件上传，不会将文件直接上传到上传对象中，会将文件上传到默认的PHP上传临时文件夹中，在经过PHP程序操作，存储到相应的数据库中

// error，文件上传临时文件夹，是否成功，其返回值，会存放在该键位中
// 返回值：0	 上传成功
// 		1    文件大小，超出PHP的最大限制
// 		2	 文件大小，超出了HTML的最大限制
// 		3    文件只上传了一部分
// 		4	 没有文件上传
// 		6	 没有找到临时文件夹 
//         7	 文件写入失败


// echo "<pre>";
// print_r($_FILES);
// echo "</pre>";
// 

// PHP的文件上传，是将在临时文件夹中的临时文件，重新命名，然后存储在数据库中

// 第一步需要验证临时文件是否上传成功
// 

// 一般项目中，对于input的命名都有严格的要求，前端程序员会按照要求来执行，我们可以使用固定的已经定义好的name的属性值
// 
// 
// 如果需要严格执行程序，需要使用foreach，遍历数组，获取新的数组，再通过键位读取数据
// 
// foreach ($_FILES as $v){
// 		$f = $v;
// }
// 
// if (!($f["error"] === 0) ) {
// 		exit("临时文件上传错误");
// }
// 
// 


// if(!($_FILES["pic"]["error"] === 0)){
// 	die("临时文件上传失败，请检查文件上传");
// }


// 2，给需要存入数据库的文件，赋值一个新的，不会重复的文件名称
// 
// 文件名是PHP程序生成的，扩展名一定要继续使用之前的扩展名
// qq.png png保留，qq更换
// 
// 获取原始文件的扩展名
// 
// 为什么不获取 .jpg 为了提高比对效率，尽量减少比对位数
// 

$fileName = $_FILES["pic"]["name"];

$ff = strtolower(substr($fileName , strrpos($fileName , ".")+1 ));


// 生成新的文件名
// 
// 使用MD5()，参数：微妙+随机数
// 

$nwefile =  md5(microtime(true)+mt_rand(1000,9999)) . "." .$ff;



// 文件上传到服务器
// 此处模拟上传到本地硬盘
// 
// 第一个参数是临时文件路径
// 
// 第二参数：可以只是一个文件名称，那么会默认上传到执行PHP文件所在的文件夹
// 
// 可以通过设定相对路径的方式，指定上传位置
// 
// 路径一定是字符串形式，但是通常情况下，字符串中只包含路径，将新文件名以字符串拼接的形式，写在其之后
// 


move_uploaded_file($_FILES["pic"]["tmp_name"] , "upload/".$nwefile);