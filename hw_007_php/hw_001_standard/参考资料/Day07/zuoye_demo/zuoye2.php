<?php

// 实现数组中数据，从小到大排列
// 
// 算法
// 
// 其实就是function之中封装的程序
// 
// 可以实现排序的算法有很多，比价经典的有：
// 
// 冒泡，插入，快速等等
// 
// 冒泡排序：将数字两两比较，将较大值放在后面
// 

$a = [5,4,3,2,1];


// 第一步，循环一次，找出其中的最大值
// 

// 使用sizeof函数，获取数组单元个数
// 
// 
// 说明：1,第一次减一，从0开始循环，循环次数,因为$j<= , sizeof()-1
// 	  2，第二次减一，是因为最后一个数组，不需要循环到，已经通过$i+1，跟倒数第二个数字进行了比较
// 	  3，第三次减一，是因为，比较的倒数第二次，进行的是第一个数字和第二个数组的比较，比较之后，就剩下第一个数字自己，不再需要比较
// 	  
// $x = sizeof($a) - 3;
// $y = sizeof($a) - 2;


// for ($j= 0; $j <= $x ; $j++) { 
	
// 说明：-$j 是应为，通过第一次循环，可以确定一个最大值，第二次在循环时，最后一个最大值，不需要参与比较，第三次循环，最后两个最大值不需要参与循环
// 	意味着，比较出的最大数越多，下一次需要参与比较的数字就越少


// for ($i= 0; $i <= $y-$j; $i++) { 
		// 比较的是 $a[$i] , $a[$i+1] ，如此比较，最后一个数字，不需要循环到的，因为前一个数字，已经同他进行了比较，因为，sizeof($a)-2
		
// 		if($a[$i] > $a[$i+1]){
// 			$b = 0;
// 			$b = $a[$i];
// 			$a[$i] = $a[$i+1];
// 			$a[$i+1] = $b; 
// 		}
// 	}	

// }



// 了解冒泡算法的本质:

// 1,量量大小比较，将较大的值放在第二位

// 2,最后一个单元因为已经与之前的单元进行过比较了，那么最后一个数字不参与，循环

// 3,每一次比较之后，都会确定一个数字的位置，已经确定位置的单元，不需要参与下一次循环，第一个单元就剩他自己了，就不需要比较了
// 
// 
// 冒泡排序函数
// @param array $arr 需要排序的索引数组
// @return array $arr 返回值是一个从小到大排序好的数组


function maopao($arr){
	$x = sizeof($arr) - 3;
	$y = sizeof($arr) - 2;

	for ($j=0; $j <= $x ; $j++) { 
		for ($i=0; $i <= $y - $j ; $i++) { 
			if($arr[$i] > $arr[$i+1]){
			$b = 0;
			$b = $arr[$i];
			$arr[$i] = $arr[$i+1];
			$arr[$i+1] = $b; 
			}
		}
    }

    return $arr;
}


echo "<pre>";
print_r(maopao($a));
echo "</pre>";

