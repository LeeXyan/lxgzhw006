<?php

// 随机数字

// mt_rand()随机生成一个 整数 
// 
// 如果没有参数，返回的随机数字的范围是0 -- 2的31次方-1
// 
// 
// 
// 
// 需要随机生成2-5的随机数，可以是2，也可以是5
// 
// echo mt_rand(2,5);

// 
// 生成2-5的随机数，不包含2

// echo mt_rand(3,5);
// 
// mt_rand()中的参数，只接受整型，如果是其他类型，自动转化为整型


// echo mt_rand(0.9 , "1.1a");


// 大部分系统函数的参数，如果输入为其他数据类型(不该参数正确的数据类型形式)，基本都会自动将数据类型转化为正确的类型

// 生成一个2位的随机数
// 
// echo mt_rand(10,99);


// 随机生成一个两位小数
// 
// echo mt_rand(1,99)/100;

// 随机生成一个小数，0.5---0.75
// echo mt_rand(50 , 75)/100

// 小数：0.125-0.01
// 
// 
// 小数，先统一成相同的位数，随机生成两个小数中的数字(以整数的形式)，再除以相应的10的倍数

// 随机生成12.7588 到521.845
// 
// 12.7588----127588
// 521.845----5218450
// 
// mt_rand(127588 , 5218450)
// 
//最后在除以相应的10的倍数
//
//10000
//
//

// mt_rand是PHP新的对于随机数的算法，其算法效果比老随机数：rand()要更高，我们推荐使用mt_rand()

// 简单的应用：生成随机颜色文字
// 
// 思路：将属性color的属性值，使用rgb()形式，rgb()的属性值，使用随机数
// 
// 因为程序不能直接写入到字符串中，否则会被作为字符串内容直接输出，那么需要使用字符串拼接形式
// 
//
// 
// 
// 
// 



// $a = "<span style = \" color : rgb( ";

// $a .= mt_rand(0, 255) ;

// $a .= ",";
// 


// $a .= mt_rand(0, 255) ;

// $a .= ",";

// $a .= mt_rand(0, 255) ;

// $a .= ");\"> 北京你好 </span>";

// echo $a ;
// 
// 
// 简单方式一：
// 将程序或者函数的运行结果，赋值给一个变量，字符串中拼接变量，用双引号解析


// $a = mt_rand(0 , 255);
// $b = mt_rand(0 , 255);
// $c = mt_rand(0 , 255);


// echo "<span style=\" color: rgb({$a} , {$b} , {$c}); \">北京</span>";


// 方法二：纯输出HTML标签，在标签中嵌套PHP程序，生成随机数字
// 
?>


<span style="color:rgb(
<?php echo mt_rand(0 , 255); ?>,<?php echo mt_rand(0 , 255); ?>,<?php echo mt_rand(0 , 255); ?>

);" onclick=><?php echo "北京"; ?></span> 




总结：HTML和PHP相互嵌套使用，往往是PHP程序执行的结果，作为HTML的内容或者是属性值

书写方法一共三种形式

1，字符串拼接

	此种写法比较繁琐，不利于理解，但是便于修改，便于在某两个字符串中，插入新的内容

2，使用变量：

	此种写法，可以将复杂的程序编码，使用简单的变量来替换，而且如果需要此数据重复执行，可以简化代码

3，将PHP程序直接嵌套在HTML标签中
	
	此种写法，做到HTML标签部分和PHP程序部分的分离，便于给HTML标签添加其他计算机语言效果，是项目中推荐使用写法

字符串拼接和嵌套写法是必须要掌握的