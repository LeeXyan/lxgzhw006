<?php

// 字符串类型：是由字母，数字，符号，汉字组成的一串内容
// 
// 存储范围：4G的容量

// 语法：字符串类型的数据，必须写在定界符之内

// 4种定界符：

// 	单引号
// 	双引号
// 	
// 	
// 单引号，双引号，都是直接包裹数据，作为字符串类型存储在变量中
// 
// 用法和区别：
	// 1，单引号，双引号之中，不能包裹其本身
	// 
	// 2，双引号会对其中的变量进行解析，输出的变量当中的存储数据，单引号不会对其中的数据进行解析，会将变量当做字符串直接输出

	// 实际项目中，如果字符串中没有需要解析的变量，需要使用单引号作为定界符，可以提高程序执行效率
	// 
	// 
	// 实际项目中，变量很容易和之后的内容产生冲突，造成变量不能被正常解析，需要使用{}，将变量包裹，放置冲突发生，需要将$符号和变量名称都包裹住{$a}
	// 
	// 
	// 
	// 
	// 3，单引号只会解析 \\  \'
		  // 双引号可以解析所有的转义符
		  
	// 为了解决字符串中，特殊符号和定界符或者PHP特殊符号之间的冲突，规定了转义字符
	// 
	// PHP程序中，如果是直接输出到页面中的内容，发生冲突，使用HTML的字符实体，如果是标签中的属性值，使用PHP的转义符
	// 
	// 
	
	// 长字符串定界符
	// 
	// Heredoc:
	// 
	// 直接定义一串内容非常多的字符串，可以不添加转义符等，可以被直接正确解析执行，变量也会被解析

// 	
// 	
// 	Nowdoc：
// 	
// 	变量不会被解析，转义符也不需要添加
// 	


// $a = 100;

// $a = '1"0"0';

// var_dump($a);
// 
// 

// 单引号，双引号，对于变量的不同处理
// 
// 
// $a = 10;

// echo "$a";

// echo "楚备同学此次考试成绩为：{$a}分";




// $b = '楚备同学说:"今天天气不错，\$他要请我吃饭\' "';

// $b = "楚备同学说:\"今天\$天气不错，'他要请我吃饭'\"";

// echo $b;
// 
// 
// 
// PHP的转义符与HTML中的字符实体的使用
// 
// $a = "<b style=\"color:red;\">北京今天那下雨了，有点冷啊</b>";

// echo $a;
// 
// 
// $b = "天津22222";

// $a = <<<abc


// <table border="1px" cellspacing="0" cellpadding="10px">
		

// 		<tr>
// 			<th rowspan="2">北京1</th>
// 			<th colspan="2">上海1</th>
		
// 			<th><span style="color:red;">重庆1</span></th>
// 			<th>天津1</th>
// 		</tr>

// 		<tr>

			
// 			<td>上海2</td>
// 			<td>广州2</td>
// 			<td>重庆2</td>
// 			<td>{$b}</td>
// 		</tr>

// 		<tr>
// 			<td>北京3</td>
// 			<td>上海3</td>
// 			<td>广州3</td>
// 			<td>重庆3</td>
// 			<td>天津3</td>
// 		</tr>

// 		<tr>
// 			<td>北京4</td>
// 			<td>上海4</td>
// 			<td>广州4</td>
// 			<td>重庆4</td>
// 			<td>天津4</td>
// 		</tr>
		
// 		<caption>城&nbsp;市</caption>
// 	</table>
// abc;

// echo $a;

// 总结：
// 	1，不管Heredoc和Nowdoc，都不需要PHP的转义符，但是有可能需要HTML的字符实体

// 	2，Heredoc会解析变量，Nowdoc不会解析


// 	3，长字符串定界符，赋值符号(=),之后，写的是三个小于号，小于号后跟长字符串命名
// 			(1),Heredoc命名可以直接写或者加双引号，之后不要再跟其他内容，例如多余的空格

// 			(2),Nowdo命名为单引号包裹，同样之后不要添加多余空格

// 	4，两种长定界符结束，都是以命名结束，命名之间不要加空格，命名之后紧跟分号结束，分号之后也不要添加多余的空格
// 	
// 	

// 空值

// 给变量赋值为null，变量的数据类型就是空值
// 
//  未定义
//	定义未赋值
//	已经销毁的变量
//	系统会报错，但是仍然按照null去执行


$a = 100;

unset($a);

var_dump($a);