<?php
// 数据类型的转化
// 
// PHP是一种弱类型的计算机语言，变量声明的时候不需要定义变量的数据类型，变量本身也没有数据类型，其类型由变量中存储的数据决定

// 在PHP程序执行中，因为没有对变量存储的数据类型做规定，那么在实际操作中经常遇到两个存储不同类型数据的变量，进行运算或者比较，此时PHP程序运行，需要数据类型的转化
// 
// PHP程序中数据类型的转化，分为自动转化和强制转化



// 变量$a中存储的是整型数据
// $a = 123;

// $b = "456";

// $c = $a + $b ;

// echo $c;
// 
// 其他类型转化为布尔型
// 
// 
// $a = ;

// if ($a) {

// 	echo "if小括号中的内容结果为真";

// }else{

// 	echo "if小括号中的内容结果为假";
// }
// 
// 

// 其他类型转化为数字
// 
// $a = 100;

// $b = "1.5fda300fdafdas";

// echo $a+$b;
// 
// 
// 
// 其他类型转化为字符串类型


$a = [1,2,3,4,8];

$b = "北京";

$c = $a . $b ;

// echo $c ;



// echo 只能输出标量类型

// echo理论上只能输出字符串，如果是其他类型(标量类型)，会自动转化为字符串输出，非标量类型，自动转化会出问题
// 



// echo $a;
// echo "<br>";

// var_dump($a);

// echo "<pre>";
// print_r($a);
// echo "</pre>";

// print_r以更好的形式输出内容
// pre标签，是以源码内容形式向页面输出内容
// 
// 
// 

// 数据类型的自动转化，必须熟练掌握，今后编程中会经常使用到，为了简化程序
// 
// 
// 
// 强制转化：人为的对数据类型的转化
// 
// 1，临时转化
// 
	// 前缀形式
	// 
// $a = 100;

// var_dump((int)$a);
// var_dump((float)$a);
// var_dump((bool)$a);
// var_dump((string)$a);
// 

// var_dump(  boolval($a)   );
// var_dump(  floatval($a)   );

// var_dump($a);


// 总结：临时转化都不会改变变量中存储的数据内容
// 
// 
// 永久转化：会改变变量中存储的数据内容
// 
// 

// $a = 0.0 ; 

// settype函数，第二个参数，只接受数据类型为字符串类型的内容，如果参数类型不是字符串类型，PHP程序会自动转化为字符串类型

// 此处，最好加上双引号
// 
// 
// 所有字符串参数，都必须添加双引号

// echo settype($a , "string");

// var_dump($a);

// echo $a ;
// 
// $a = 100;
// $b = true;
// $c = 2.4515;
// $d = [1,2,3,4,5,6,67,2,7];

// var_dump($a,$b,$c,$d);
// 
// 
// 数学函数：
// 
// pow(base, exp)
// 
// 执行 5的7次方

// echo pow(3 , 2);


// 开平方
// 
$a = 9 ;

// echo sqrt($a);

// var_dump(sqrt($a));


// 绝对值：abs
// 

// $a = -100;

// echo abs($a);
// 
// max(values) 返回最大值
// 

// $a = [1,2,34,4,34,23,3421,3];
// 
$b = "北京";
$c = "上海";
$d = "广州";

// echo max($a);
// 
echo max($b,$c,$d);



