<?php

// print_r(),数组输出函数
// 

// 数组转化为字符串输出 join() implode() 这两个函数是别名函数
// 
// 只能转化一维数组，并且只能获取数值信息，无法获取键位信息
// 

// $a = [1,2,3,4,5,6,"name" => "张三"];

// echo join($a);
// echo "<br>";
// echo join("!!!!!" ,$a);



// 将字符串转化为数组
// explode(),根据特定的符号，将字符串内容做分割，将分割出来的内容形成新的数组，数组的键位都是PHP默认添加的索引键位
// 
//第三个参数，设定分割出来的数组中的数据个数 
//
//如果是正数，按照该数值分割，如果数据个数少于分隔符个数，最后一个数组数据存储所有剩余字符串 
//
//如果是负数，从后往前，少生产几个数据，如果超出，则数组为空数组
//
//数字0,和1，效果相同，都是将字符串分割成一个数组的数据信息
//
// $a = "1-2-3-4-5-6";

// echo "<pre>";
// print_r(explode("-" , $a , 1));
// echo "<pre>";


// 获取数组元素个数：count() sizeof() 互为别名函数
// 
// 第二个参数默认为0，会将二维数组当做一个整体
//
//如果设定为1，将会读取二维数组中的数据个数，但是二维数组本身也会计做一个个数 
//  
//通常情况下，第二个参数不使用
//     

// $a = [1,2,3,43,54,34,21,21,321,3,214,2,23,[1,2,3,4,4,5,5,6]];

// echo count($a);
// 

// 将数组中的数值，赋值给变量 list()
// 
// 被赋值的变量可以少，但是数组中的数据不能少于需要赋值的变量
// 
// $a = ["张三","18","男","北京"];

// $name = $a[0];
// $age = $a[1];
// $sex = $a[2];
// $addr = $a[3];
// $phone = $a[4];
// 

// list($name,$age,$sex,$addr,$phone) = $a;

// echo $name,$age,$sex,$addr,$phone;


// 数组数据的排序

// 索引数组
// 
// 从小到大 sort()
// 会改变数组的结构，索引键位对应的数据会按照从小到大的顺序排列
// 
// 从大到小 rsort()
// 
// 
// $a = [894,1212,3,53,21,22,2321,6,67,332,4,25,31];

// sort($a);
// rsort($a);

// echo "<pre>";
// print_r($a);
// echo "<pre>";


// 关联数组
// 
// 按照关联键位排序
// 
// 键位从小到大排序
// ksort()
// 
// 键位从大到小排序
// krsort()
// 
// 
// 按照数据大小排序
// 
// 从小到大
// asort()
// 
// 
// 从打到小
// arsort
// 
// 

// 将数组内容反向排序：array_reverse()
// 
// 第二个参数，默认为false，不保留PHP默认添加的索引键位，输出倒叙排序之后，重新设定默认索引键位
// 
// ture，保留默认索引键位
// 

// $a = [
// 	1,2,3,"a" => 4, "b" => 5, "c" => 6

// ];


// echo "<pre>";
// print_r(array_reverse($a , true));
// echo "<pre>";


// 判断是否是数组内容

// 判断是否是数值
// 第一个参数为需要判断的内容
// 第二个参数为原数组
// 第三个参数默认为false，进行的是 == 比较
// 				true    ===

// in_array(needle, haystack , true);


// 判断是否是键位
// 第一个参数为需要判断的内容，必须是字符串
// 第二个参数是原数组

// array_key_exists(key, array)


// 使用函数对数组添加或删除数据
// 不管首位还是末位，删除一次只能是一个，增加一次可以是多个
// 
// 
// 

// 末位

// 添加
// 第一个参数是原数组
// 第二个参数是需要添加的内容，可以是多种类型，也可以是多个
// array_push(array, var)

$a = [1,2,3,4,5];

$b = ["a" => 2 ];

echo array_push($a , 25 , 8 , 9 , $b);

print_r($a);


// 删除内容
// 末位删除函数，一次只能删除一个数据
// 只有一个参数，为原数组
// 返回值是删除内容
// array_pop()



// 首位
// 
// 新增
// 一个参数是原数组
// 可以添加一个或者多个数据，
// 
// array_unshift()
// 
// 
// 删除
// 一次只能删除一个数据信息
// 返回值也是删除的内容
// 参数只有一个，为原数组
// 
// array_shift()
// 